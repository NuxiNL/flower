syntax = 'proto3';

package flower.switchboard;

enum Right {
  CLIENT = 0;
  EGRESS = 1;
  INGRESS = 2;
  RESOLVER = 3;
  SERVER = 4;
}

message ConstrainRequest {
  // Actions that are permitted to be performed on the new constrained
  // switchboard connection. These rights must be a subset of the rights
  // present on the existing switchboard connection.
  repeated Right rights = 1;

  // Labels that must be present on any incoming requests for them to be
  // received on the new switchboard connection. This affects
  // EgressStart(), ResolverStart() and ServerStart().
  map<string, string> additional_in_labels = 2;

  // Labels that are automatically added to any outgoing requests. This
  // affects ClientConnect() and IngressConnect().
  map<string, string> additional_out_labels = 3;
}

message ConstrainResponse {
  fd switchboard = 1;
}

message ClientConnectRequest {
}

message ClientConnectResponse {
  fd server = 1;
  map<string, string> labels = 2;
}

message EgressStartRequest {
}

message EgressStartResponse {
  fd egress = 1;
}

message IngressConnectRequest {
  fd client = 1;
  map<string, string> labels = 2;
}

message IngressConnectResponse {
}

message ResolverStartRequest {
  repeated string in_labels = 1;
}

message ResolverStartResponse {
  fd resolver = 1;
}

message ServerStartRequest {
}

message ServerStartResponse {
  fd server = 1;
}

service Switchboard {
  rpc Constrain(ConstrainRequest) returns (ConstrainResponse);

  rpc ClientConnect(ClientConnectRequest) returns (ClientConnectResponse);
  rpc EgressStart(EgressStartRequest) returns (EgressStartResponse);
  rpc IngressConnect(IngressConnectRequest) returns (IngressConnectResponse);
  rpc ResolverStart(ResolverStartRequest) returns (ResolverStartResponse);
  rpc ServerStart(ServerStartRequest) returns (ServerStartResponse);
}
